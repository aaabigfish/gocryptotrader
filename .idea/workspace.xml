<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ad82d063-a25f-4545-aea1-218aa83f5ebe" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/banner.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/core/donation.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/core/version.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/alphapoint/alphapoint_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/binance/binance_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/binanceus/binanceus_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/bitfinex/bitfinex_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/bitfinex/bitfinex_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/bitflyer/bitflyer_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/bitflyer/bitflyer_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/bithumb/bithumb_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/bithumb/bithumb_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/bitmex/bitmex_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/bitmex/bitmex_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/bitstamp/bitstamp_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/bitstamp/bitstamp_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/btse/btse_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/btse/btse_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/coinbasepro/coinbasepro_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/coinbasepro/coinbasepro_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/coinut/coinut_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/coinut/coinut_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/exmo/exmo_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/exmo/exmo_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/gateio/gateio_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/gateio/gateio_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/gemini/gemini_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/gemini/gemini_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/hitbtc/hitbtc_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/hitbtc/hitbtc_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/huobi/huobi_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/huobi/huobi_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/kraken/kraken_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/kraken/kraken_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/kucoin/kucoin_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/kucoin/kucoin_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/okcoin/okcoin_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/okcoin/okcoin_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/okx/okx_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/okx/okx_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/poloniex/poloniex_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/poloniex/poloniex_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exchanges/yobit/yobit_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/exchanges/yobit/yobit_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/portfolio/portfolio_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/portfolio/portfolio_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/portfolio/withdraw/validate_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/portfolio/withdraw/validate_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="ccop7c7l" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2gVnCJ4ry8yAlVgsRqlpr9iQyVI" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go Application&quot;,
    &quot;Go Build.go build github.com/aaabigfish/gocryptotrader.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGetOrderbooks in github.com/aaabigfish/gocryptotrader/exchanges/okcoin.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRealEx in github.com/aaabigfish/gocryptotrader/engine.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRealExWs in github.com/aaabigfish/gocryptotrader/engine.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestUpdateTicker in github.com/aaabigfish/gocryptotrader/exchanges/cryptocom.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestWebsocketRoutineManagerSetup in github.com/aaabigfish/gocryptotrader/engine.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestWebsocketRoutineManagerStart in github.com/aaabigfish/gocryptotrader/engine.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestWsHuobi in github.com/aaabigfish/gocryptotrader/exchanges/huobi.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/code/aaabigfish/goparrot-twap&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;http.proxy&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\code\aaabigfish\gocryptotrader\exchanges\bitget" />
      <recent name="D:\code\aaabigfish\gocryptotrader\exchanges\crypto" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/aaabigfish/gocryptotrader">
    <configuration name="go build github.com/aaabigfish/gocryptotrader" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetOrderbooks in github.com/aaabigfish/gocryptotrader/exchanges/okcoin" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/exchanges/okcoin" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/exchanges/okcoin" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetOrderbooks\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetOrderbooks in github.com/aaabigfish/gocryptotrader/exchanges/okcoin" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/exchanges/okcoin" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/exchanges/okcoin" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetOrderbooks\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRealEx in github.com/aaabigfish/gocryptotrader/engine" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/engine" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/engine" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRealEx\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRealEx in github.com/aaabigfish/gocryptotrader/engine" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/engine" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/engine" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRealEx\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRealExWs in github.com/aaabigfish/gocryptotrader/engine" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/engine" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/engine" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRealExWs\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUpdateTicker in github.com/aaabigfish/gocryptotrader/exchanges/cryptocom" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/exchanges/cryptocom" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/exchanges/cryptocom" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUpdateTicker\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWsHuobi in github.com/aaabigfish/gocryptotrader/exchanges/huobi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/exchanges/huobi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/exchanges/huobi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWsHuobi\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWsHuobi in github.com/aaabigfish/gocryptotrader/exchanges/huobi" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="gocryptotrader" />
      <working_directory value="$PROJECT_DIR$/exchanges/huobi" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/aaabigfish/gocryptotrader/exchanges/huobi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWsHuobi\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/aaabigfish/gocryptotrader" />
        <item itemvalue="Go Test.TestUpdateTicker in github.com/aaabigfish/gocryptotrader/exchanges/cryptocom" />
        <item itemvalue="Go Test.TestWsHuobi in github.com/aaabigfish/gocryptotrader/exchanges/huobi" />
        <item itemvalue="Go Test.TestGetOrderbooks in github.com/aaabigfish/gocryptotrader/exchanges/okcoin" />
        <item itemvalue="Go Test.TestRealEx in github.com/aaabigfish/gocryptotrader/engine" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.15989.157" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-GO-241.15989.157" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="GitHub.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/exchanges/binance/binance.go</url>
          <line>796</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>